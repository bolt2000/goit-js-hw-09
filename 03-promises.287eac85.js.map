{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASC,cAAc,sBAC9BE,EAAQH,SAASC,cAAc,uBAC/BG,EAASJ,SAASC,cAAc,wBAOtC,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IACpBS,QAAQC,IAAI,uBAAqBX,QAAiBC,SAElDG,EAAO,C,SAAEJ,EAAUS,MAAAR,IACpBS,QAAQC,IAAI,sBAAoBX,QAAiBC,O,GAE/CA,EAAM,G,CAoBfR,EAAKmB,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,IAAIC,EAAaC,SAASnB,EAAMoB,OAC5BC,EAAYF,SAASpB,EAAKqB,OAC1BE,EAAcH,SAASlB,EAAOmB,OAElC,IAAI,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,IAC/BrB,EAAeqB,EAAGL,GACfM,MAAK,EAACrB,SAAEA,EAAUS,MAAAa,MACjB/B,EAAAgC,OAAOC,QAAQ,uBAAqBxB,QAAiBsB,MAAU,IAEhEG,OAAM,EAACzB,SAAEA,EAAUS,MAAAiB,MAClBnC,EAAAgC,OAAOC,QAAQ,sBAAoBxB,QAAe0B,MAAU,IAE9DX,GAAcG,EAElBzB,EAAKkC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('form')\nconst step = document.querySelector('input[name=\"step\"]');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\n\n\n\n\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject({ position, delay });\n       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      }, delay);\n  });\n};\n\n\n\n\n\n// createPromise(3, 1500, 5)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  \n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  let delayInput = parseInt(delay.value);\n  let stepInput = parseInt(step.value);\n  let amountInput = parseInt(amount.value);\n  \n  for(let i = 1; i <= amountInput; i ++) {\n    createPromise (i, delayInput)\n      .then(({ position, delay }) => {\n        Notify.warning(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      delayInput += stepInput;\n  }\n  form.reset();\n});\n\n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","console","log","addEventListener","event","preventDefault","delayInput","parseInt","value","stepInput","amountInput","i","then","delay2","Notify","warning","catch","delay3","reset"],"version":3,"file":"03-promises.287eac85.js.map"}